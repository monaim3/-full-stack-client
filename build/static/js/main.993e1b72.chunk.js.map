{"version":3,"sources":["components/Admin/Admin.js","components/Header/Header.js","images/logo.png","components/Product/Product.js","components/Cart/Cart.js","utilities/databaseManager.js","components/Home/Home.js","components/NotFound/NotFound.js","components/OrderedItem/OrderedItem.js","images/giphy.gif","components/Order/Order.js","components/ProductDetail/ProductDetail.js","components/Checkout/Checkout.js","components/Login/firebase.config.js","components/Login/Login.js","components/Login/loginManager.js","components/PrivateRoute/PrivateRoute.js","components/Deals/Deals.js","App.js","serviceWorker.js","index.js"],"names":["Admin","useForm","register","handleSubmit","errors","watch","useState","img","setImageURL","className","action","onSubmit","data","productData","name","weight","price","key","fetch","method","headers","body","JSON","stringify","then","res","json","alert","placeholder","defaultValue","ref","required","title","type","onChange","event","imageData","FormData","set","append","target","files","axios","post","response","display_url","catch","error","console","log","Header","useContext","UserContext","loggedInUser","to","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","isSignedIn","style","height","width","src","photo","alt","Product","props","product","fontWeight","showAddToCart","onClick","handleAddProduct","Cart","cart","total","i","length","quantity","children","getDataKey","userId","existingUser","sessionStorage","getItem","newUser","Date","getTime","setItem","getUser","getDatabaseCart","dataKey","localStorage","parse","window","store","value","toString","clear","Home","products","setProducts","setCart","useEffect","savedCart","productKeys","Object","keys","newCart","toBeAddedKey","sameProduct","find","pd","count","others","filter","currentCart","addToDatabaseCart","map","NotFound","OrderedItem","removeProduct","Order","orderPlaced","history","useHistory","productKey","removeFromDatabaseCart","happyImage","color","push","ProductDetail","useParams","setProduct","Checkout","orderDetails","checkout","orderTime","removeItem","email","address","phone","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","password","setUser","firebase","apps","initializeApp","setLoggedInUser","from","useLocation","state","pathname","handleResponse","redirect","replace","auth","signOut","success","err","googleProvider","GoogleAuthProvider","signInWithPopup","user","displayName","photoURL","message","handleGoogleSignIn","icon","faGoogle","PrivateRoute","rest","render","location","Deals","class","createContext","App","Provider","path","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.993e1b72.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './Admin.css';\n\nconst Admin = () => {\n    const { register, handleSubmit, watch, errors } = useForm();\n    const [img, setImageURL] = useState({});\n\n    const handleImageUpload = event => {\n        \n        const imageData = new FormData();\n        imageData.set('key', '51e0ee40006994fc21dafaa450445f33');\n        imageData.append('image', event.target.files[0])\n\n        axios.post('https://api.imgbb.com/1/upload',imageData)\n            .then(function (response) {\n                \n                setImageURL(response.data.data.display_url);\n\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    const onSubmit = data => {\n        const productData = {\n            name: data.name,\n             \n            weight: data.weight,\n            img: img,\n            price: data.price,\n            key: data.key\n        }\n    \n        fetch('http://localhost:5000/addProduct', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(productData)\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data) {\n                    alert('Your Product has been added successfully')\n                }\n            })\n\n     }\n\n    return (\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-md-4\">\n               <div className=\"rock\">\n               <h3>Add Product</h3>\n               </div>\n            </div>\n            <div className=\"col-md-8\">\n            <div className=\" d-flex justify-content-center text-center\">\n                <form className=\"\" action=\"\" onSubmit={handleSubmit(onSubmit)}>\n                    <label className=\"col-form-label\"><b>Product Name :</b></label>\n                    <input className=\"form-control \" name=\"name\" placeholder=\"Enter product name\" defaultValue=\"\" ref={register({ required: true })} />\n                    {errors.title && <span className=\"error\">Name is required</span>}\n                    \n                    {/* <label className=\"col-form-label\"><b>Product Description :</b></label>\n                    <input className=\"form-control\" name=\"description\" placeholder=\"Enter product Description\" defaultValue=\"\" ref={register({ required: true })} />\n                    {errors.description && <span className=\"error\">Description is required</span>} */}\n                    \n                    <label className=\"col-form-label\"><b>Product Price :</b></label>\n                    <input className=\"form-control\" name=\"price\" placeholder=\"Enter product price\" defaultValue=\"\" ref={register({ required: true })} />\n                    {errors.price && <span className=\"error\">Price is required</span>}\n  \n                    \n                  \n                    <label className=\"col-form-label\"><b>Product No :</b></label>\n                    <input className=\"form-control\" name=\"key\" defaultValue=\"\" placeholder=\"Enter product No.\" ref={register({ required: true })} />\n                    {errors.key && <span className=\"error\">**Product No. is required to show your products on UI**</span>}\n                    <br />\n                    <label className=\"col-form-label\"><b>Upload Product Image :</b></label>\n                    <input className=\"form-control\" name=\"img\" placeholder=\"Upload Image\" type=\"file\" onChange={handleImageUpload} />\n                    {errors.img&& <span className=\"error\">Image is required</span>}\n                    \n                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                </form>\n            </div>\n\n            </div>\n        </div>\n           \n        </div>\n    );\n};\n\nexport default Admin;","import React, { useState } from 'react';\nimport logo from '../../images/logo.png';\nimport './Header.css';\nimport { Link } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { UserContext } from '../../App';\n\n\n\nconst Header = () => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n    return (\n        <nav className=\"container navbar navbar-expand-lg navbar-light bg-transparent mb-5\">\n            <Link to=\"/home\"><h3>Rock Valley</h3></Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\"><Link to=\"/home\" className=\"nav-link\">Home</Link></li>\n                    <li className=\"nav-item\"><Link to=\"/order\" className=\"nav-link\">Order</Link></li>\n                    <li className=\"nav-item\"><Link to=\"/admin\" className=\"nav-link\">Admin</Link></li>\n                    <li className=\"nav-item\"><Link to=\"/deals\" className=\"nav-link\">Deals</Link></li>\n                    <li className=\"nav-item\"><Link to=\"/login\" className=\"nav-link\">{\n                        \n                        loggedInUser.isSignedIn ? <img style={{ height: '20px', width: '20px' }} src={loggedInUser.photo} alt=\"\" /> :\n                            <span className=\"btn btn-primary\">Log In</span>\n                        \n                    }</Link></li>\n                    \n                </ul>\n            </div>\n        </nav>\n    );\n};\n\nexport default Header;\n\n{/* <div className=\"header\">\n    {/* <img src={logo} alt=\"\"/>\n    <nav>\n        <Link to=\"/shop\">Shop</Link>\n        <Link to=\"/review\">Order Review</Link>\n        <Link to=\"/inventory\">Manage Inventory</Link>\n        <button onClick={() => setLoggedInUser({})}>Sign out</button>\n    </nav>\n</div> */}\n","export default __webpack_public_path__ + \"static/media/logo.0dd9a510.png\";","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\n \nconst Product = (props) => {\n    console.log(props);\n    const {   img, price, name } = props.product;\n    \n    return (\n        <div className=\"col-md-4 d-flex justify-content-center mb-3\">\n            <div className=\"card\" style={{ width: '18rem' }}>\n                <img className=\"card-img-top\" src={img} alt=\"\" />\n                <div className=\"card-body d-flex justify-content-around\">\n                    <p style={{ fontWeight: 'bold' }}>{name}</p>\n                </div>\n                <div className=\"card-footer d-flex justify-content-around\">\n                    <p style={{ fontWeight: 'bold' }}>$ {price}</p>\n                    {\n                        props.showAddToCart === true && <Link to=\"/order\">\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={() => props.handleAddProduct(props.product)}\n                            >\n                                 BUY NOW\n                            </button>\n                        </Link>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Product;\n\n{/* <div className=\"product\">\n    <div>\n        <img src={imgUrl} alt=\"\" />\n    </div>\n    <div>\n        <h4 className=\"product-name\"><Link to={\"/product/\" + key}>{title}</Link></h4>\n        <br />\n        <p>{description}</p>\n        <p>Price: ${price}</p>\n        <p>Weight: {weight}</p>\n        {props.showAddToCart === true && <Link to=\"/review\">\n            <button\n                className=\"btn btn-success\"\n                onClick={() => props.handleAddProduct(props.product)}\n            >\n                <FontAwesomeIcon icon={faShoppingCart} /> BUY NOW\n                    </button>\n        </Link>}\n    </div>\n</div> */}\n\n\n\n","import React from 'react';\n\n\nconst Cart = (props) => {\n    const cart = props.cart;\n    console.log(props.cart)\n   \n    let total = 0;\n    for(let i = 0; i< cart.length; i++){\n        const product = cart[i];\n        console.log(product.price , product.quantity);\n        total = total + product.price * product.quantity || 1;\n    }\n    // let shipping = 0;\n    // if(total > 35){\n    //     shipping = 0;\n    // }\n    // else if(total > 15){\n    //     shipping = 4.99;\n    // }\n    // else if(total > 0){\n    //     shipping = 12.99\n    // }\n\n    // const tax = (total / 10).toFixed(2);\n    \n\n    const formatNumber = num => {\n        const precision = num.toFixed(2);\n        return Number(precision);\n    }\n    return (\n        <div>\n            \n            <p>Total Price: {total}</p>\n            <br/>\n            {\n                props.children\n            }\n        </div>\n    );\n};\n\nexport default Cart;","const getUser = () => {\n    const existingUser = sessionStorage.getItem('userId');\n    if (existingUser) {\n        return existingUser; \n    } else {\n        const newUser = 'user-' + new Date().getTime();\n        sessionStorage.setItem('userId', newUser)\n        return newUser;\n    }\n}\n\n\nconst getDataKey = () => {\n    const userId = getUser();\n    return `freValley/carts/${userId}`\n}\n\n// push to local storage: a temporary place for database\nconst getDatabaseCart = () => {\n    const dataKey = getDataKey();\n    const data = localStorage.getItem(dataKey) || \"{}\";\n    return JSON.parse(data);\n}\n\nconst addToDatabaseCart = (key, count) => {\n    const currentCart = getDatabaseCart();\n    currentCart[key] = count;\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n}\n\nconst removeFromDatabaseCart = key => {\n    const currentCart = getDatabaseCart();\n    delete currentCart[key];\n    localStorage.setItem(getDataKey(), JSON.stringify(currentCart));\n}\n\nconst processOrder = (cart) => {\n    localStorage.removeItem(getDataKey());\n}\n\n\nexport { addToDatabaseCart, getDatabaseCart, removeFromDatabaseCart, processOrder };\n\n\n// polyfill to support older browser\nconst localStorage = window.localStorage || (() => {\n  let store = {}\n  return {\n    getItem(key) {\n      return store[key]\n    },\n    setItem(key, value) {\n      store[key] = value.toString()\n    },\n    clear() {\n      store = {}\n    }\n  };\n})()\n\nconst sessionStorage = window.sessionStorage || (() => {\n  let store = {}\n  return {\n    getItem(key) {\n      return store[key]\n    },\n    setItem(key, value) {\n      store[key] = value.toString()\n    },\n    clear() {\n      store = {}\n    }\n  };\n})()\n// end of poly fill","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport Product from '../Product/Product';\nimport Cart from '../Cart/Cart';\nimport { addToDatabaseCart, getDatabaseCart } from '../../utilities/databaseManager';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    \n    const [products, setProducts] = useState([]);\n    const [cart, setCart] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:5000/products')\n            .then(res => res.json())\n            .then(data => setProducts(data))\n    }, [])\n\n    useEffect(() => {\n        const savedCart = getDatabaseCart();\n        const productKeys = Object.keys(savedCart);\n        fetch('http://localhost:5000/productsByKeys', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(productKeys)\n        })\n            .then(res => res.json())\n            .then(data => setCart(data));\n    }, [])\n\n    const handleAddProduct = (product) => {\n        const toBeAddedKey = product.key;\n        const sameProduct = cart.find(pd => pd.key === toBeAddedKey);\n        let count = 1;\n        let newCart;\n        if (sameProduct) {\n            count = sameProduct.quantity + 1;\n            sameProduct.quantity = count;\n            const others = cart.filter(pd => pd.key !== toBeAddedKey);\n            newCart = [...others, sameProduct];\n        }\n        else {\n            product.quantity = 1;\n            newCart = [...cart, product];\n        }\n        setCart(newCart);\n        addToDatabaseCart(product.key, count);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {\n                    products.map(pd => <Product\n                        key={pd.key}\n                        showAddToCart={true}\n                        handleAddProduct={handleAddProduct}\n                        product={pd}\n                    ></Product>)\n                }\n            </div>\n           \n        </div>\n    );\n};\n\nexport default Home;","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div className=\"container\">\n            <h1 className=\"text-center text-danger\">Sorry, page not found !!!</h1>\n        </div>\n    );\n};\n\nexport default NotFound;","import React from 'react';\n\nconst OrderedItem = (props) => {\n    console.log(props);\n    const {  price, quantity,  key, name } = props.product;\n\n   \n    return (\n        <div className=\"container col-md-12 d-flex justify-content-between border-bottom \">\n            <p className=\"col-md-3\">{name}</p>\n            <p className=\"col-md-3\">1</p>\n            <p className=\"col-md-3\"> $ {price}</p>\n            <button\n                className=\"btn btn-dark col-md-3\"\n                onClick={() => props.removeProduct(key)}\n            >Remove </button>\n        </div>\n       \n    );\n};\n\nexport default OrderedItem;","export default __webpack_public_path__ + \"static/media/giphy.46a86830.gif\";","import React, { useEffect, useState } from 'react';\nimport { getDatabaseCart, removeFromDatabaseCart, processOrder } from '../../utilities/databaseManager';\nimport OrderedItem from '../OrderedItem/OrderedItem';\nimport Cart from '../Cart/Cart';\nimport happyImage from '../../images/giphy.gif';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nconst Order = () => {\n    const [cart, setCart] = useState([]);\n    const [orderPlaced, setOrderPlaced] = useState(false);\n    const history = useHistory();\n\n    const handleProceedCheckout = () => {\n        history.push('/checkout');\n    }\n\n    const removeProduct = (productKey) => {\n        const newCart = cart.filter(pd => pd.key !== productKey);\n        setCart(newCart);\n        removeFromDatabaseCart(productKey);\n    }\n\n    useEffect(() => {\n        //cart\n        const savedCart = getDatabaseCart();\n        const productKeys = Object.keys(savedCart);\n\n        fetch('http://localhost:5000/productsByKeys', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(productKeys)\n        })\n            .then(res => res.json())\n            .then(data => setCart(data));\n    }, []);\n\n    let thankyou;\n    if (orderPlaced) {\n        thankyou = <img src={happyImage} alt=\"\" />\n    }\n    return (\n        <div className=\"container\">\n            <h1 style={{ color: 'rgb(54,57,88)' }} className=\"col-md-12 mb-5\">Checkout</h1>\n            <div className=\"col-md-12 d-flex justify-content-between border-bottom\">\n                <div className=\"col-md-3\"><p><b>Name</b></p></div>\n                <div className=\"col-md-3\"><p><b>Quantity</b></p></div>\n                <div className=\"col-md-3\"><p><b>Price</b></p></div>\n                <div className=\"col-md-3\"> Delete</div>\n            </div>\n            {\n                cart.map(pd => <OrderedItem\n                    key={pd.key}\n                    removeProduct={removeProduct}\n                    product={pd}></OrderedItem>)\n            }\n            <div className=\"text-right col-md-12\">\n                <Cart cart={cart}>\n                    <button onClick={handleProceedCheckout} className=\"btn btn-primary mt-5  \">Checkout</button>\n                </Cart>\n            </div>\n        </div>\n    );\n};\n\nexport default Order;\n\n{/* <div className=\"col-md-12 d-flex justify-content-between border-bottom\">\n    <div className=\"col-md-3\"><h4>Description</h4></div>\n    <div className=\"col-md-3\"><h4>Quantity</h4></div>\n    <div className=\"col-md-3\"><h4>Price</h4></div>\n    <div className=\"col-md-3\"><FontAwesomeIcon icon={faTrash} /></div>\n</div> */}","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Product from '../Product/Product';\n\nconst ProductDetail = () => {\n    const {productKey} = useParams();\n    const [product, setProduct] = useState({});\n    useEffect(() => {\n        fetch('http://localhost:5000/product/'+productKey)\n        .then(res=>res.json())\n        .then(data=>setProduct(data));\n        \n    },[productKey])\n    \n    return (\n        <div className=\"container justify-content-center\">\n            <h1 className=\" text-center mb-5\">Your Product Details.</h1>\n            <Product showAddToCart={false} product={product}></Product>\n        </div>\n    );\n};\n\nexport default ProductDetail;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport './Checkout.css';\nimport { useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { getDatabaseCart, processOrder } from '../../utilities/databaseManager';\n\nconst Checkout = () => {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const onSubmit = data => {\n    // console.log('form submitted', data)\n    const savedCart = getDatabaseCart();\n    const orderDetails = { ...loggedInUser, products: savedCart, checkout: data, orderTime: new Date() };\n\n    fetch('http://localhost:5000/addOrder', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderDetails)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data) {\n          processOrder();\n          alert('your order has been placed successfully');\n\n        }\n      })\n  };\n\n  console.log(watch(\"example\")); \n\n  return (\n    <div className=\"container d-flex justify-content-center text-center\">\n      <form className=\"ship-form\" onSubmit={handleSubmit(onSubmit)}>\n        <input name=\"name\" defaultValue={loggedInUser.name} ref={register({ required: true })} placeholder=\"Your Name\" />\n        {errors.name && <span className=\"error\">Name is required</span>}\n\n        <input name=\"email\" defaultValue={loggedInUser.email} ref={register({ required: true })} placeholder=\"Your Email\" />\n        {errors.email && <span className=\"error\">Email is required</span>}\n\n        <input name=\"address\" ref={register({ required: true })} placeholder=\"Your Address\" />\n        {errors.address && <span className=\"error\">Address is required</span>}\n\n        <input name=\"phone\" ref={register({ required: true })} placeholder=\"Your Phone Number\" />\n        {errors.phone && <span className=\"error\">Phone Number is required</span>}\n\n        <button className=\"btn btn-primary mt-4\" type=\"submit\">Place Order</button>\n        \n      </form>\n    </div>\n  );\n};\n\nexport default Checkout;","const firebaseConfig = {\n  apiKey: \"AIzaSyAw3PSZOR07dkMtXZ7ei_Wp7mbz8_i925c\",\n  authDomain: \"rock-valley-8e0f7.firebaseapp.com\",\n  projectId: \"rock-valley-8e0f7\",\n  storageBucket: \"rock-valley-8e0f7.appspot.com\",\n  messagingSenderId: \"344295859269\",\n  appId: \"1:344295859269:web:f170190301fc8c04eb6f2c\"\n};\n\nexport default firebaseConfig;\n\n\n\n\n\n\n\n\n\n\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyAg5VZVSs_HQHYxUZITBBpThIOCEzDYKls\",\n//   authDomain: \"ema-john-simple-535d1.firebaseapp.com\",\n//   projectId: \"ema-john-simple-535d1\",\n//   storageBucket: \"ema-john-simple-535d1.appspot.com\",\n//   messagingSenderId: \"1052981724474\",\n//   appId: \"1:1052981724474:web:b36ddd84b5332ac1a2bc03\"\n// };\n\n// export default firebaseConfig;\n\n\n\n// const firebaseConfig = {\n//     apiKey: \"AIzaSyBHhOX8rtp2vahVcATkhTD_7CwARw6arrk\",\n//     authDomain: \"fire-auth2.firebaseapp.com\",\n//     databaseURL: \"https://fire-auth2.firebaseio.com\",\n//     projectId: \"fire-auth2\",\n//     storageBucket: \"fire-auth2.appspot.com\",\n//     messagingSenderId: \"587131087182\",\n//     appId: \"1:587131087182:web:f7e53e9007fe7760d7561f\"\n//   };\n//   export default firebaseConfig;","import React, { useState } from 'react';\nimport { useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { initializeLoginFramework, handleGoogleSignIn, handleSignOut, handleFbSignIn, createUserWithEmailAndPassword, signInWithEmailAndPassword } from './loginManager';\n\n\n\nfunction Login() {\n  const [newUser, setNewUser] = useState(false);\n  const [user, setUser] = useState({\n    isSignedIn: false,\n    name: '',\n    email: '',\n    password: '',\n    photo: ''\n  });\n\n  initializeLoginFramework();\n\n  const [loggedInUser, setLoggedInUser ] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  let { from } = location.state || { from: { pathname: \"/\" } };\n\n  const googleSignIn = () => {\n      handleGoogleSignIn()\n      .then(res => {\n        handleResponse(res, true);\n      })\n  }\n\n  // const fbSignIn = () => {\n  //     handleFbSignIn()\n  //     .then(res => {\n  //       handleResponse(res, true);\n  //     })\n\n  // }\n\n  const signOut = () => {\n      handleSignOut()\n      .then(res => {\n          handleResponse(res, false);\n      })\n  }\n\n  const handleResponse = (res, redirect) =>{\n    setUser(res);\n    setLoggedInUser(res);\n    if(redirect){\n        history.replace(from);\n    }\n  }\n\n  // const handleBlur = (e) => {\n  //   let isFieldValid = true;\n  //   if(e.target.name === 'email'){\n  //     isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n  //   }\n  //   if(e.target.name === 'password'){\n  //     const isPasswordValid = e.target.value.length > 6;\n  //     const passwordHasNumber =  /\\d{1}/.test(e.target.value);\n  //     isFieldValid = isPasswordValid && passwordHasNumber;\n  //   }\n  //   if(isFieldValid){\n  //     const newUserInfo = {...user};\n  //     newUserInfo[e.target.name] = e.target.value;\n  //     setUser(newUserInfo);\n  //   }\n  // }\n  // const handleSubmit = (e) => {\n  //   if(newUser && user.email && user.password){\n  //     createUserWithEmailAndPassword(user.name, user.email, user.password)\n  //     .then(res => {\n  //       handleResponse(res, true);\n  //     })\n  //   }\n\n  //   if(!newUser && user.email && user.password){\n  //     signInWithEmailAndPassword(user.email, user.password)\n  //     .then(res => {\n  //       handleResponse(res, true);\n  //     })\n  //   }\n  //   e.preventDefault();\n  // }\n\n\n\n  return (\n    <div className=\"container d-flex justify-content-center\">\n      {\n        loggedInUser.isSignedIn ? <button className=\"btn btn-danger\" onClick={signOut}>Log Out</button> :\n          <button className=\"btn btn-primary\" onClick={googleSignIn}><FontAwesomeIcon className=\"google-icon\" icon={faGoogle} /> Continue With Google</button>\n      }\n    </div>\n    // <div style={{textAlign: 'center'}}>\n    //   { user.isSignedIn ? <button onClick={signOut}>Sign Out</button> :\n    //     <button onClick={googleSignIn}>Sign In</button>\n    //   }\n    //   <br/>\n    //   <button onClick={fbSignIn}>Sign in using Facebook</button>\n    //   {\n    //     user.isSignedIn && <div>\n    //       <p>Welcome, {user.name}!</p>\n    //       <p>Your email: {user.email}</p>\n    //       <img src={user.photo} alt=\"\"/>\n    //     </div>\n    //   }\n\n    //   <h1>Our own Authentication</h1>\n    //   <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\"/>\n    //   <label htmlFor=\"newUser\">New User Sign up</label>\n    //   <form onSubmit={handleSubmit}>\n    //     {newUser && <input name=\"name\" type=\"text\" onBlur={handleBlur} placeholder=\"Your name\"/>}\n    //     <br/>\n    //     <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Your Email address\" required/>\n    //     <br/>\n    //     <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Your Password\" required/>\n    //     <br/>\n    //     <input type=\"submit\" value={newUser ? 'Sign up' : 'Sign in'}/>\n    //   </form>\n    //   <p style={{color: 'red'}}>{user.error}</p>\n    //   { user.success && <p style={{color: 'green'}}>User { newUser ? 'created' : 'Logged In'} successfully</p>}\n    // </div>\n  );\n}\n\nexport default Login;\n","import  firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\n\nexport const initializeLoginFramework = () => {\n    if(firebase.apps.length === 0) {\n        firebase.initializeApp(firebaseConfig);\n    }\n}\n\nexport const handleGoogleSignIn = () => {\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n    return firebase.auth().signInWithPopup(googleProvider)\n    .then(res => {\n      const {displayName, photoURL, email} = res.user;\n      const signedInUser = {\n        isSignedIn: true,\n        name: displayName,\n        email: email,\n        photo: photoURL,\n        success: true\n      };\n      return signedInUser;\n    })\n    .catch(err => {\n      console.log(err);\n      console.log(err.message);\n    })\n  }\n\n  export const handleFbSignIn = () => {\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\n    return firebase.auth().signInWithPopup(fbProvider).then(function(result) {\n      var token = result.credential.accessToken;\n      var user = result.user;\n      user.success = true;\n      return user;\n    }).catch(function(error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage)\n    });\n  }\n\n  export const handleSignOut = () => {\n    return firebase.auth().signOut()\n    .then(res => {\n      const signedOutUser = {\n        isSignedIn: false,\n        name: '',\n        email: '',\n        photo: '',\n        error: '',\n        success: false\n      }\n      return signedOutUser;\n    }).catch(err => {\n      // An error happened.\n    });\n  }\n\n export const createUserWithEmailAndPassword = (name, email, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\n    .then( res => {\n      const newUserInfo = res.user;\n      newUserInfo.error = '';\n      newUserInfo.success = true;\n      updateUserName(name);\n      return newUserInfo;\n    })\n    .catch( error => {\n      const newUserInfo = {};\n      newUserInfo.error = error.message;\n      newUserInfo.success = false;\n      return newUserInfo;\n    });\n }\n\n export const signInWithEmailAndPassword = (email, password) =>{\n    return firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(res => {\n      const newUserInfo = res.user;\n      newUserInfo.error = '';\n      newUserInfo.success = true;\n      return newUserInfo;\n    })\n    .catch(function(error) {\n      const newUserInfo = {};\n      newUserInfo.error = error.message;\n      newUserInfo.success = false;\n      return newUserInfo;\n    });\n }\n\n const updateUserName = name =>{\n    const user = firebase.auth().currentUser;\n\n    user.updateProfile({\n      displayName: name\n    }).then(function() {\n      console.log('user name updated successfully')\n    }).catch(function(error) {\n      console.log(error)\n    });\n  }","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { UserContext } from '../../App';\n\nconst PrivateRoute = ({children, ...rest}) => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n    return (\n        <Route\n      {...rest}\n      render={({ location }) =>\n        loggedInUser.email ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\n\nconst Deals = () => {\n    return (\n        <div>\n            <h1 class=\"text-center text-danger mt-4\">THis is Deals Page </h1>\n        </div>\n    );\n};\n\nexport default Deals;","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Admin from './components/Admin/Admin';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport NotFound from './components/NotFound/NotFound';\nimport Order from './components/Order/Order';\nimport ProductDetail from './components/ProductDetail/ProductDetail';\nimport Checkout from './components/Checkout/Checkout';\nimport Login from './components/Login/Login';\nimport { createContext } from 'react';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Deals from './components/Deals/Deals';\n\n\nexport const UserContext = createContext();\n\nfunction App(props) {\n  const [loggedInUser, setLoggedInUser] = useState({});\n  return (\n    <UserContext.Provider value = {[loggedInUser, setLoggedInUser]}>\n      <div className=\"container\">\n        {/* <h1 className=\"text-center\">ema-john-with-auth</h1> */}\n        {/* <h3 className=\"text-center\">Name: {loggedInUser.name}</h3> */}\n      </div>\n      <Router>\n        <Header></Header>\n        <Switch>\n          <Route path=\"/home\">\n            <Home/>\n          </Route>\n          <PrivateRoute path=\"/order\">\n            <Order/>\n          </PrivateRoute>\n          <Route path=\"/login\">\n           <Login/>\n          </Route>\n          {/* <Route path=\"/order\">\n            <Order/>\n          </Route> */}\n          <PrivateRoute path=\"/admin\">\n            <Admin/>\n          </PrivateRoute>\n          {/* <Route path=\"/admin\">\n            <Admin/>\n          </Route> */}\n\n          <Route path=\"/deals\">\n         <Deals></Deals>\n          </Route>\n          <Route path=\"/login\">\n            <Deals></Deals>\n          </Route>\n          {/* <PrivateRoute path=\"/checkout\">\n            <Checkout/>\n          </PrivateRoute> */}\n          <Route path=\"/checkout\">\n            <Checkout />\n          </Route>\n          <Route exact path=\"/\">\n            <Home/>\n          </Route>\n          <Route path=\"/product/:productKey\">\n            <ProductDetail></ProductDetail>\n          </Route>\n          <Route path=\"*\">\n            <NotFound></NotFound>\n          </Route>\n        </Switch>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Bootstrap from '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}